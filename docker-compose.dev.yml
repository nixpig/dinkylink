version: "3.1"

services:
  db:
    restart: always
    image: dinkylink/db
    build:
      context: services/db
      dockerfile: Dockerfile
    env_file:
      - .env
    command: [ "--auth" ]
    ports:
      - 27017:27017
    volumes:
      - ./services/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:so
      - dinky_db_volume:/data/db
    networks:
      - dinky_net

  create:
    restart: always
    image: dinkylink/create
    build:
      context: services/create
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8081:8081
    volumes:
      - ./services/create/lib:/usr/src/app/lib:so
    depends_on:
      - db
    networks:
      - dinky_net

  view:
    restart: always
    image: dinkylink/view
    build:
      context: services/view
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8082:8082
    volumes:
      - ./services/view/lib:/usr/src/app/lib:so
    depends_on:
      - broker
    networks:
      - dinky_net

  visit:
    restart: always
    image: dinkylink/visit
    build:
      context: services/visit
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8083:8083
    volumes:
      - ./services/visit/lib:/usr/src/app/lib:so
    depends_on:
      - broker
      - cache
      - db
    networks:
      - dinky_net

  ui:
    restart: always
    image: dinkylink/ui
    build:
      context: services/ui
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./services/ui/dist:/usr/src/app/dist:so
    depends_on:
      - visit
      - create
      - view
    networks:
      - dinky_net

  proxy:
    restart: always
    image: nginx:1.25.2-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:so
      - ~/localhost.pem:/etc/encryption/localhost.pem:so
      - ~/localhost-key.pem:/etc/encryption/localhost-key.pem:so
    depends_on:
      - create
      - view
      - visit
      - db
      - cache
      - broker
      - ui
    networks:
      - dinky_net

  cache:
    restart: always
    image: redis:7.2.0-alpine
    env_file:
      - .env
    volumes:
      - dinky_cache_volume:/data
    depends_on:
      - db
    networks:
      - dinky_net

  broker:
    restart: always
    image: redis:7.2.0-alpine
    env_file:
      - .env
    volumes:
      - dinky_broker_volume:/data
    networks:
      - dinky_net

  stream:
    restart: always
    image: redis:7.2.0-alpine
    env_file:
      - .env
    volumes:
      - dinky_stream_volume:/data
    networks:
      - dinky_net

volumes:
  dinky_db_volume:
  dinky_cache_volume:
  dinky_broker_volume:
  dinky_stream_volume:


networks:
  dinky_net:
    driver: bridge
